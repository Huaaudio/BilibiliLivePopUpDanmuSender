// ==UserScript==
// @name         摸鱼专用弹幕发送小窗口 BLive Chat Message Sender
// @namespace    https://github.com/Huaaudio/BilibiliLivePopUpDanmuSender
// @version      1.4
// @description  Creates a pop-up window for viewing and sending Bilibili Live chat messages. 这个版本是可选的，因为公司的网不会自动更新弹幕，就把 Laplace Chat 接了进来
// @match        https://live.bilibili.com/*
// @grant        none
// @resource     
// ==/UserScript==

(function() {
    'use strict';

    let popupWindow = null;

    // Function to create the pop-up window
    function createPopupWindow() {
        const currentURL = window.location.href;
        const roomId = currentURL.match(/live.bilibili.com\/(\d+)/)?.[1];
        const chatRenderURL = `https://chat.vrp.moe/obs/${roomId}?altDanmakuLayout=false&autoHideEvent=0&baseFontSize=20&colorScheme=light&connectionMode=direct&customAvatarApi=&limitEventAmount=8&limitStickyAmount=10&loginSyncServer=&loginSyncToken=&showAutoDanmaku=false&showAvatar=true&showAvatarFrame=true&showCurrentRank=true&showDanmaku=true&showEnterEvent=false&showEnterEventCurrentGuardOnly=false&showFollowEvent=false&showGift=true&showGiftFree=false&showGiftHighlightAbove=29.99&showGiftPriceAbove=1&showGiftStickyAbove=29.99&showLottery=true&showMedal=false&showMedalLightenedOnly=true&showModBadge=true&showPhoneNotVerified=false&showRedEnvelop=true&showStickyBar=true&showSuperChat=true&showSystemMessage=true&showToast=true&showUserLevelAbove=0&showUserLvl=false&showUsername=true&showWealthMedal=false&useCst=false`;
        popupWindow = window.open('', 'Chat Message Pop-up', 'width=600,height=800');
        popupWindow.document.write(`
            <html>
            <head>
                <title>Chat Message Pop-up</title>
                <style>
                    body {
                        font-family: Arial, sans-serif;
                        padding: 10px;
                    }
                    #inputContainer {
                        margin-bottom: 10px;
                    }
                    #inputField {
                        width: 300px;
                        margin-right: 10px;
                    }
                </style>
            </head>
            <body>
                <div id="inputContainer">
                    <input type="text" id="inputField">
                    <button id="sendButton">Send</button>
                </div>

                <div id="chatContainer">
                <iframe id="chatFrame" src="${chatRenderURL}" style="width: 100%; height: 100%; border: none;"></iframe>
            </div>
                <script>
                    const inputField = document.getElementById('inputField');
                    const sendButton = document.getElementById('sendButton');
                    const chatMessages = document.getElementById('chatMessages');

                    function sendMessage() {
                        const message = inputField.value;
                        if (message.trim() !== '') {
                            window.opener.postMessage(message, '*');
                            inputField.value = '';
                        }
                    }

                    sendButton.onclick = sendMessage;

                    inputField.addEventListener('keydown', function(event) {
                        if (event.key === 'Enter') {
                            sendMessage();
                        }
                    });
                </script>
            </body>
            </html>
        `);
    }

    // Function to handle messages from the pop-up window
    function handleMessage(event) {
        let message = event.data;

        // Ensure the message is a string
        if (typeof message !== 'string') {
            message = JSON.stringify(message);
        }

        const chatInput = document.querySelector('textarea.chat-input.border-box');
        chatInput.value = message;
        chatInput.dispatchEvent(new Event('input', { bubbles: true }));

        // Simulate pressing the Enter key
        const enterKeyEvent = new KeyboardEvent('keydown', {
            key: 'Enter',
            code: 'Enter',
            keyCode: 13,
            bubbles: true
        });
        chatInput.dispatchEvent(enterKeyEvent);
    }


    // Open the pop-up window on a specific key press (e.g., Ctrl + M)
    document.addEventListener('keydown', function(event) {
        if (event.ctrlKey && event.key === 'b') {
            if (popupWindow === null || popupWindow.closed) {
                createPopupWindow();
            } else {
                popupWindow.focus();
            }
        }
    });

    // Listen for messages from the pop-up window
    window.addEventListener('message', handleMessage, false);
})();